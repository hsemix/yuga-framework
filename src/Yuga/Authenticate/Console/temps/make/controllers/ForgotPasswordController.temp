<?php

namespace {namespace}\Controllers\Auth;

use {namespace}\Models\User;
use {namespace}\Controllers\Controller;
use Yuga\Models\PasswordReset;
use Yuga\Application\Application;
use Yuga\Authenticate\Shared\SendPasswordResetEmails;

class ForgotPasswordController extends Controller
{
    /*
    |--------------------------------------------------------------------------
    | Password Reset Controller
    |--------------------------------------------------------------------------
    |
    | This controller is responsible for handling password reset emails and
    | includes a trait which assists in sending these notifications from
    | your application to your users. Feel free to explore this trait.
    |
    */

    use SendPasswordResetEmails;

    /**
     * Where to redirect users after sending them a reset password link.
     *
     * @var string
     */
    protected $redirectTo = '/reset/password';

    /**
     * Get the mailer Instance
     * 
     * @var \Yuga\Mailables\Mailer
     */
    protected $mailer;

    /**
     * Create a new controller instance.
     * 
     * @param \Yuga\Interfaces\Application\Application $app
     *
     * @return void
     */
    public function __construct(Application $app)
    {
        $this->middleware('guest');
        $this->mailer = $app['mailer']; 
    }

    /**
     * Send an email detailing how the user should reset their password
     * 
     * @param array $fields
     * @param \Yuga\Models\PasswordReset $passwordReset
     * 
     * @return \Yuga\Mailables\Mailer
     */
    protected function sendMail(array $fields, PasswordReset $passwordReset)
    {
        $user = (new User)->findByEmail($fields['email'])->first();
        $data = ['name' => $user->fullname, 'token' => $passwordReset->token];

        return $this->mailer->send($this->getMailFile($data), $data, function($m) use ($fields) {
            $m->to($fields['email']);
            $m->subject('Reset Password');
            $m->from('no-reply@yuga.com'); // optional
        });
    }

}
